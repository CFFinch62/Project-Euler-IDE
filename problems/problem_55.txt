Problem 55: Lychrel Numbers

If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.

Not all numbers produce palindromes so quickly. For example,

349 + 943 = 1292,
1292 + 2921 = 4213
4213 + 3124 = 7337

That is, 349 took three iterations to arrive at a palindrome.

Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, 10677 is the first number to be shown to require over fifty iterations before producing a palindrome: 4668731596684224866951378664 (53 iterations, 28-digits).

Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is 4994.

How many Lychrel numbers are there below ten-thousand?

Hint:
1. We need to count how many numbers below 10000 are Lychrel numbers
2. Strategy:
   - For each number from 1 to 9999:
     - Apply the reverse and add process
     - Check if it becomes a palindrome within 50 iterations
3. Implementation:
   - Create a function to reverse a number
   - Create a function to check if a number is a palindrome
   - Apply the reverse and add process up to 50 times
4. Optimization:
   - Use string manipulation for reversing numbers
   - Stop early if a palindrome is found
   - Use arbitrary-precision arithmetic for large numbers
5. Key points:
   - A number is Lychrel if it doesn't produce a palindrome in 50 iterations
   - Need to handle very large numbers
   - Consider palindromic Lychrel numbers 