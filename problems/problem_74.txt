Problem 74: Digit Factorial Chains

The number 145 is well known for the property that the sum of the factorial of its digits is equal to 145:

1! + 4! + 5! = 1 + 24 + 120 = 145

Perhaps less well known is 169, in that it produces the longest chain of numbers that link back to 169; it turns out that there are only three such loops that exist:

169 → 363601 → 1454 → 169
871 → 45361 → 871
872 → 45362 → 872

It is not difficult to prove that EVERY starting number will eventually get stuck in a loop. For example,

69 → 363600 → 1454 → 169 → 363601 (→ 1454 → 169 → 363601 (→ ...))

Starting with 69 produces a chain of five non-repeating terms.

Starting with 145 produces a chain with 89 non-repeating terms.

How many starting numbers below one million produce a chain with exactly sixty non-repeating terms?

Hint:
1. We need to count numbers that produce chains of exactly 60 non-repeating terms
2. Strategy:
   - Generate chains for each starting number
   - Track length until repetition
   - Count those with exactly 60 terms
3. Implementation:
   - Calculate factorial sums of digits
   - Detect loops in chains
   - Store chain lengths for reuse
4. Optimization:
   - Pre-calculate digit factorials
   - Cache chain lengths
   - Use patterns to skip numbers
5. Key points:
   - Need to detect loops
   - Want exactly 60 terms
   - Consider caching results
   - Handle factorial calculations efficiently 